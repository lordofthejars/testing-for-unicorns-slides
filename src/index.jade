mixin slide(names, slideClasses)
  if names
    section(class=names+' '+slideClasses, data-bespoke-backdrop='backdrop ' + names.split(' ').map(function(name) { return 'backdrop--' + name; }).join(' '))
      block
  else
    section
      block

doctype html
html
  head
  meta(charset='utf-8')
  meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
  title Testing For Unicorns

  link(rel='stylesheet', type='text/css', href='build/build.css')
  link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css')

  body

    article

      +slide('title')
        h1.gothicfont.presentationtitle <span class='important'>Testing</span> <span class='orange'>for</span> <span class='yellowColor'>Unicorns</span>
        aside(role='note') Readable, easy to understand/purpose, fun, About composers
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
          
      +slide
        div.main-wrap
          div.leftbar
            h2.biofont(style='font-size:2em') Alex Soto
            br
            h2.biofont.important(style='font-size:1em') Red Hat Engineer
            h2.biofont(style='font-size:1em') Open Source Advocate
            h2.biofont.important(style='font-size:1em') @alexsotob
            img(src='images/public.png', style="width:40%")
          div.rightbar
            img(src='images/family.jpg', style="width:100%")
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide('adarise')
        h2.biggothic.gothicfont Questions
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide('kari')
          h2.biggothic.gothicfont.background-title Assertions
          aside(role='note') Most of tests have them 
          div.footer
            i.fa.fa-twitter &nbsp;alexsotob&nbsp;
            i.fa.fa-github &nbsp;lordofthejars
    
      +slide
        h2.gothicfont.filegothic JUnit Test
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            @Test
            public void should_find_composer_by_name() {

                // Given:
                Composers composers = new Composers();

                // When:
                final Composer mozart = composers.findComposerByName("Wolfgang Amadeus Mozart");

                // Then:
                assertEquals("Wolfgang Amadeus Mozart", mozart.getName());
                assertEquals(Era.CLASSICAL, mozart.getEra());
                assertEquals(LocalDate.of(1756, 1, 27), mozart.getBirthdate());
                assertEquals(LocalDate.of(1791, 12, 5), mozart.getDied());

            }
            
        aside(role='note') Should, GivenWhenThen BDD, assertEquals and collections, Snowball
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide('onion')
        h2.biggothic.gothicfont.background-title Hamcrest
        aside(role='note') Improves readibility
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide
        h2.gothicfont.filegothic Hamcrest Test
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            import static org.hamcrest.CoreMatchers.equalTo;
            import static org.hamcrest.CoreMatchers.is;
            import static org.hamcrest.text.IsEqualIgnoringWhiteSpace.equalToIgnoringWhiteSpace;
          
            @Test
            public void should_find_composer_by_name() {

                // Given:
                Composers composers = new Composers();

                // When:
                final Composer mozart = composers.findComposerByName("Wolfgang Amadeus Mozart");

                // Then:
                assertThat(mozart.getName(), is(equalToIgnoringWhiteSpace("Wolfgang Amadeus Mozart")));
                assertThat(mozart.getEra(), is(equalTo(Era.CLASSICAL)));
                assertThat(mozart.getBirthdate(), is(equalTo(LocalDate.of(1756, 1, 27))));
                assertThat(mozart.getDied(), is(equalTo(LocalDate.of(1791, 12, 5))));

            }

        aside(role='note') 
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide
        h2.gothicfont.filegothic Hamcrest Test
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            import static org.hamcrest.CoreMatchers.hasItem;
            import static org.hamcrest.collection.IsCollectionWithSize.hasSize;
            
            @Test
            public void should_find_operas_by_composer_name() {
                // Given:
                Composers composers = new Composers();
                // When:
                final List<Opera> operas = composers.findOperasByComposerName("Ludwig van Beethoven");

                // Then:
                final Opera fidelio = Composers.OperaFactory
                        .createOpera("Fidelio")
                        .language(Language.GERMAN).librettist("Georg Friedrich Treitschke")
                        .roles("Florestan", "Leonore", "Rocco").build();
                        
                assertThat(operas, hasSize(1));
                assertThat(getOperaNames(operas), hasItem("Fidelio"));
                assertThat(operas, hasItem(fidelio));
            }      

        aside(role='note') Developers needs to remember, no IDE, depends on equals, snowball
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide('train')
        h2.biggothic.gothicfont.background-title AssertJ
        aside(role='note') best of hamcrest and fixes wrong things IDE friendly, DSL approach
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide
        h2.gothicfont.filegothic AssertJ Example
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            import static org.assertj.core.api.Assertions.assertThat;
            @Test
            public void should_find_composer_by_name() {
              // Given:
              Composers composers = new Composers();

              // When:
              final Composer mozart = composers.findComposerByName("Wolfgang Amadeus Mozart");

              // Then:
              assertThat(mozart.getName())
                      .isEqualTo("Wolfgang Amadeus Mozart");
              assertThat(mozart.getBirthdate())
                      .isEqualTo(LocalDate.of(1756, 1, 27));
                      
          br
          code.bullet.bespoke-bullet.bespoke-bullet-inactive.code-font.
            &nbsp;&nbsp;assertThat(mozart).isEqualToComparingFieldByField(expectedMozart);
            &nbsp;&nbsp;assertThat(mozart).isEqualToIgnoringNullFields(expectedMozart);
                      
            }

        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide
        h2.gothicfont.filegothic AssertJ Collections Example
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            @Test
            public void should_find_operas_by_composer_name() {

                // Given:
                Composers composers = new Composers();

                // When:
                final List<Opera> operas = composers.findOperasByComposerName("Wolfgang Amadeus Mozart");

                // Then:
                assertThat(operas)
                        .hasSize(2)
                        .extracting(Opera::getName)
                        .containsExactlyInAnyOrder("Die ZauberflÃ¶te", "Don Giovanni");

            }

        aside(role='note') Still Snowball
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide
        h2.gothicfont.filegothic AssertJ Soft Assertions
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            @Test
            public void should_find_composer_by_name_soft_assertions() {

                // Given:
                Composers composers = new Composers();

                // When:
                final Composer mozart = composers.findComposerByName("Wolfgang Amadeus Mozart");

                // Then:
                SoftAssertions.assertSoftly(softly -> {
                    softly.assertThat(mozart.getName()).isEqualTo("Wolfgang Amadeus Mozart");
                    softly.assertThat(mozart.getEra()).isEqualTo(Era.CLASSICAL);
                    softly.assertThat(mozart.getBirthdate()).isEqualTo(LocalDate.of(1756, 1, 27));
                    softly.assertThat(mozart.getDied()).isEqualTo(LocalDate.of(1791, 12, 5));
                 });
            }

        aside(role='note') No snowball
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
   
      +slide('eriso')
        h2.biggothic.gothicfont.background-title Things Go Wrong
        aside(role='note') Improves readibility
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide
        h2.gothicfont.filegothic Try/Catch
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            @Test
            public void should_throw_exception_if_composer_not_found() {
                // Given:
                Composers composers = new Composers();

                // When:
                try {
                    final Composer salieri = composers.findComposerByName("Antonio Salieri");
                    fail();
                } catch (IllegalArgumentException e) {

                    // Then:
                    assertEquals("Composer Antonio Salieri is not found", e.getMessage());
                }

            }

        aside(role='note') Not beautiful
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
          
      +slide
        h2.gothicfont.filegothic JUnit
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            @Test(expected = IllegalArgumentException.class)
            public void should_throw_exception_if_composer_not_found_version_2() {
                // Given:
                Composers composers = new Composers();

                // When:
                final Composer salieri = composers.findComposerByName("Antonio Salieri");

            }

        aside(role='note') Not know who throws, nor if it is the expected one, break BDD
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic JUnit Rule
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.

            @Rule
            public ExpectedException thrown = ExpectedException.none();
          
            @Test
            public void should_throw_exception_if_composer_not_found_version_3() {
                // Given:
                Composers composers = new Composers();

                // When:
                thrown.expect(IllegalArgumentException.class);
                final Composer salieri = composers.findComposerByName("Antonio Salieri");

            }

        aside(role='note')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic AssertJ Exceptions
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            @Test
            public void should_throw_exception_if_composer_not_found_version_3() {
                // Given:
                Composers composers = new Composers();

                // When:
                // Then:
                assertThatThrownBy(() -> composers.findComposerByName("Antonio Salieri"))
                        .isInstanceOf(IllegalArgumentException.class)
                        .withFailMessage("Composer Antonio Salieri is not found");

          br
          code.bullet.bespoke-bullet.bespoke-bullet-inactive.code-font.
            &nbsp;&nbsp;&nbsp;&nbsp;// When:
            &nbsp;&nbsp;&nbsp;&nbsp;Throwable thrown = catchThrowable(() -> composers.findComposerByName("Antonio Salieri"));

            &nbsp;&nbsp;&nbsp;&nbsp;// Then:
            &nbsp;&nbsp;&nbsp;&nbsp;assertThat(thrown).isInstanceOf(IllegalArgumentException.class)
                              .withFailMessage("Composer Antonio Salieri is not found");
                                
        aside(role='note')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.smallgothic.underline Benefits of AssertJ
        ul.lists
          li IDE friendly
          li Assertions Generation
          li Integration with Guava, Joda, DB, Neo4j and Swing
          
        aside(role='note') Plugin CLI, Gradle, IDE, Maven
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.biggothic.gothicfont Demo
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('sleep')
        h2.biggothic.gothicfont.background-title Don't Sleep
        aside(role='note') Not really a unit test but int. test, sleep(500...1000), UI most time
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic Asynchronous Call
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            @Test
            public void should_play_operas() throws InterruptedException {
                // Given:
                final Opera nozzeDiFigaro = ...;
                Gramophone gramophone = new Gramophone();

                // When:
                gramophone.play(nozzeDiFigaro);

                // Then:
                TimeUnit.SECONDS.sleep(3);
                assertThat(gramophone.getCurrentOpera()).isEqualTo(nozzeDiFigaro);

            }

        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('awaitility')
        aside(role='note')  Awaitility is a DSL that allows you to express expectations of an asynchronous system
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic Awaitility Example
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            @Test
            public void should_play_operas_version_2() {
                // Given:
                final Opera nozzeDiFigaro = Composers.OperaFactory
                        .createOpera("Le Nozze di Figaro")
                        .language(Language.ITALIAN).librettist("Lorenzo Da Ponte")
                        .roles("Count Almaviva", "Countess Rosina", "Susanna", "Figaro")
                        .build();

                Gramophone gramophone = new Gramophone();

                // When:
                gramophone.play(nozzeDiFigaro);

                // Then:
                await().atMost(5, TimeUnit.SECONDS).until(gramophone::isPlaying);
                assertThat(gramophone.getCurrentOpera()).isEqualTo(nozzeDiFigaro);

            }

        aside(role='note')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic JAX-RS Async
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            import static org.mockito.Mockito.mock;
            import static org.mockito.Mockito.verify;
            
            // public void composersInfoAsync(@Suspended final AsyncResponse asyncResponse, 
            //                                @PathParam("composer") String composer) {}
            
            @Test
            public void should_get_composer_and_image_async() {
                // Then:
                given().ignoreExceptions()
                        .await().atMost(10, TimeUnit.SECONDS)
                        .until(() -> {
                                verify(asyncResponse).resume(responseArgumentCaptor.capture());
                        });

                final ComposersResourceAsync.ComposerInfo composerInfo = responseArgumentCaptor.getValue();
                assertThat(composerInfo.getImageUrl()).hasHost("localhost")
                        .hasPath("/images/Wolfgang+Amadeus+Mozart.jpg");

            }

        aside(role='note') can mock
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.smallgothic.underline Benefits of Awaitility

        ul.lists
          li Deadlock Detection
          li Pollings: Fixed, Fibonacci, Iterative, Custom
          li Simple Library

        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('rest')
        h2.biggothic.gothicfont.background-title REST API
        aside(role='note') REST (Xml, JSon), Move forward to a black box
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic GET /Ludwig+van+Beethoven
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            {
              "name": "Ludwig van Beethoven",
              "era": "ROMANTIC",
              "birthdate": {
                }
              },
              "died": {
              },
              "operas": [
                {
                  "name": "Fidelio",
                  "librettist": "Georg Friedrich Treitschke",
                  "language": "GERMAN",
                  "roles": [
                    "Rocco",
                    "Leonore",
                    "Florestan"
                  ]
                }
              ]
            }
        aside(role='note')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
          
      +slide
        h2.gothicfont.filegothic HttpClient Example
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            @Test
            public void should_find_composer() throws IOException, URISyntaxException {
                // Given:
                URIBuilder uriBuilder = new URIBuilder("http://localhost:8080/");
                uriBuilder.setPath("Ludwig van Beethoven");
                
                // When:
                final Content bodyContent = Request.Get(uriBuilder.build())
                        .execute().returnContent();

                String body =  bodyContent.asString();

                // Then:
                assertThat(body).contains("\"name\":\"Ludwig van Beethoven\"")
                                .contains("\"librettist\":\"Georg Friedrich Treitschke\"");
            }
        
        aside(role='note')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic WebDriver Example
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            // Given:
            WebDriver browser = new FirefoxDriver();
            URIBuilder uriBuilder = new URIBuilder("http://localhost:8080/");
            uriBuilder.setPath("Ludwig van Beethoven");
            
            browser.navigate().to(uriBuilder.build());
            assertThat(browser.getPageSource()).contains("\"name\":\"Ludwig van Beethoven\"");
            
        aside(role='note') 
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('restassured')
        aside(role='note') Testing and validating REST services
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic REST-assured Example
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            @Test
            public void should_find_composer() {
                    given()
                        .when()
                          .get("{composer}", "Ludwig van Beethoven")
                        .then()
                          .assertThat()
                            .body("name", is("Ludwig van Beethoven"))
                            .body("operas.size()", is(1))
                            .body("operas.name", hasItems("Fidelio"));
            }

        aside(role='note') GPath
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic REST-assured Example
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            @Test
            public void should_insert_composer() {
                Composer composer = ....;
                given()
                      .param("parameter1", "parameterValue")
                      .body(composer)
                    .when()
                      .post()
                      .then()
                        .assertThat()
                        .statusCode(201);
            }
            
        aside(role='note') 
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic REST-assured Request Logging
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            given().log().all(). .. // Log all request specification details including parameters, headers, body
            given().log().params(). .. // Log only the parameters of the request
            given().log().body(). .. // Log only the request body
            given().log().headers(). .. // Log only the request headers
            given().log().cookies(). .. // Log only the request cookies
            given().log().method(). .. // Log only the request method
            given().log().path(). .. // Log only the request path
            
        aside(role='note') Chunks of bytes, maybe not useful at all, just debugging
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic REST-assured Response Logging
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            get("/x").then().log().ifError()
            get("/x").then().log().all()
            given().log().ifValidationFails()
            get("/x").then().log().ifStatusCodeIsEqualTo(302)
            given().config(RestAssured.config()
                                      .logConfig(logConfig().enableLoggingOfRequestAndResponseIfValidationFails())
                          )
        
        aside(role='note')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic REST-assured Request Specification
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            RequestSpecBuilder builder = new RequestSpecBuilder();
            builder.setBaseUri("http://example.com");
            
            given().spec(builder.build())...
        aside(role='note') Reuse same configuration across all requests, expectations, path, root, auth, port, host, params, headers
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic REST-assured Auth
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            given().auth().oauth2(accessToken).when()...
            given().auth().form("John", "Doe", springSecurity().withCsrfFieldName("_csrf")).when()...
            given().auth().basic("username", "password").when()...
        
        aside(role='note') Basic, Digest, Form, CSRF token, OAUTH, Custom
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.smallgothic.underline More Features
        ul.lists
          li Custom Parsers
          li SSL support (<span class="important">.relaxedHTTPSValidation()</span>)
          li Filters
          li JSON Schema Validation
      
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('ants')
        h2.biggothic.gothicfont.background-title (Micro) Services Dependencies
        aside(role='note') Test code that connect to 3rd party or internal services
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.smallgothic.underline Problems with Services
        ul.lists
          li Network Down
          li Service Down
          li Limits on API
          li Component not in Control
          li Micro-Services Dependencies Hell
        
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
    
      +slide
        h2.gothicfont.smallgothic.underline Possible Solutions
        ul.lists
          li Mock Http Component
          li Stub/Fake Http Server
          li Service Virtualization
        
        aside(role='note') Mock not full stack, not reflect the reality, it is about your knowledge
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('matrix')
        h2.biggothic.gothicfont.background-title Service Virtualization
        
        aside(role='note') Light Proxy
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        img.schemash(src='images/capturemode.png')
        aside(role='note') first call nothing real service and way back persisted
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        img.schemash(src='images/simulatemode.png')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('hoverfly')
            
        aside(role='note') Implementation in Go, integrated with Java, connection proxy modification
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic Hoverfly Example
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            @ClassRule
            public static HoverflyRule hoverflyRule = HoverflyRule.inCaptureOrSimulationMode("getcomposers.json");

            @Test
            public void should_get_composers_from_composers_microservice() throws URISyntaxException, IOException {

               // Given:
               ComposersGateway composersGateway = new ComposersGateway("192.168.99.100", 8081);

               // When:
               Composer composer = composersGateway.getComposer("Ludwig van Beethoven");

               // Then:
               assertThat(composer.getName()).isEqualTo("Ludwig van Beethoven");
            }  
        aside(role='note') 
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic Hoverfly File Example
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            {
              "data" : {
                "pairs" : [ {
                  "request" : {
                    "path" : "/Ludwig van Beethoven",
                    "method" : "GET",
                    "destination" : "192.168.99.100:8081",
                    ...
                  }
                  "response" : {
                    "status" : 200,
                    "body" : "{\"name\":\"Ludwig van Beethoven\",}",
                    "encodedBody" : false,
                    "headers" : {
                      "Connection" : [ "keep-alive" ],
                    ...
                    }
                 }
               }
             }
                    
        aside(role='note') 
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.biggothic.gothicfont Demo
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('burncontainer')
        h2.biggothic.gothicfont.background-title Containers are <span class='important'>Burning</span>
                
        aside(role='note') Light Proxy
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic Testing Containers
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            //assuming Dockerfile or docker-compose already created
            docker build -t myorg/myservice:1.0.0 .
            docker run --rm -ti -p 8080:8080 myorg/myservice:1.0.0
            
          br
          code.bullet.bespoke-bullet.bespoke-bullet-inactive.
            docker-compose up
          
          br
          code.bullet.bespoke-bullet.bespoke-bullet-inactive.
            // Run your test IDE or build tool
            mvn clean test
          
          br
          code.bullet.bespoke-bullet.bespoke-bullet-inactive.
            docker-compose stop
      
      
        aside(role='note') manual step, although build tool or script not natural to developer, not debug, select exactly test method, IP problems (multiple users)
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('arquilliancube')
                
        aside(role='note') JUnit extension, manages everything, suite level, method level, connect to existing, parallel, IP
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic Arquillian Cube Example
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            @RunWith(Arquillian.class)
            public class HelloWorldTest {

                @ArquillianResource
                @DockerUrl(containerName = "helloworld", exposedPort = 8080)
                RequestSpecBuilder requestSpecBuilder;

                @Test
                public void should_receive_ok_message() {
                    RestAssured
                        .given()
                        .spec(requestSpecBuilder.build())
                        .when()
                        .get()
                        .then()
                        .assertThat().body("status", equalTo("OK"));
                }

            }
            
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.gothicfont.filegothic Arquillian Cube K8s Example
        pre.small.language-javascript
          code.code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.code-font.
            public class HelloWorldTest {

              @ArquillianResource
              KubernetesClient client;

              @Named("hello-world-service")
              @PortForward
              @ArquillianResource
              URL url;
              
              @Test
              public void testRunningPodStaysUp() throws Exception {
                assertThat(client).deployments().pods().isPodReadyForPeriod();
              }
        
        aside(role='note') Ready within a time period (30 seconds by default), then that the pod keeps being Ready for a period (defaults to 10 seconds).      
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
            
      +slide('adathink')
        h2.gothicfont.biggothic.background-title Let's <span class='important'>wind down</span>
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
          
      +slide
        h2.gothicfont.smallgothic.underline Conclusions
        ul.lists
          li From low-level to high-level
          li Not just for Micro-Services
          li Improves Readibility of Tests
            
        aside(role='note')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide
        h4 <span class='important'>The purpose</span> of automated testing is to <span class='important'>enable change</span>. <br/> <span class='important'>Verifying</span> correctness is just a nice <span class='important'>side-effect</span>.
        h3 Jeremy Norris
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide
        img.avatar(src='images/profile.jpg')
        br
        a(href='http://bit.ly/2gLiXEL', style='border:none')
          i.fa.fa-slideshare
          h3 http://bit.ly/2gLiXEL
          i.fa.fa-envelope
          h3 asotobu@gmail.com
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

    script(src='build/build.js')
